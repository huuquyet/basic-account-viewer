{"version":3,"sources":["screens/SettingsScreen.js","services/account.js","screens/HomeScreen.js","navigation/MainNavigator.js","App.js","assets/images/freighter.png"],"names":["SettingsScreen","View","style","flex","justifyContent","alignItems","backgroundColor","Text","networks","name","passphrase","Networks","TESTNET","serverUrl","PUBLIC","freighter","Freighter","HomeScreen","useState","network","setNetwork","server","setServer","keypair","setKeypair","loading","setLoading","account","setAccount","useEffect","Server","undefined","initServer","a","async","loadAccount","publicKey","balances","map","asset","asset_type","balance","assetCode","asset_code","assetIssuer","asset_issuer","liquidity_pool_id","transactions","forAccount","accountId","order","limit","call","then","records","pop","record","operations","catch","console","error","createRecord","find","rec","type","createdAt","created_at","createdBy","source_account","isError","fetchAccount","res","styles","container","buttons","row","net","Button","onPress","color","title","Error","Keypair","fromPublicKey","connectFreighter","log","disabled","infoContainer","TouchableOpacity","Linking","link","accountContainer","ScrollView","column","contentContainerStyle","scrollContainer","index","assetContainer","AccountDetail","accountUrl","detailContainer","displayId","Clipboard","FontAwesome5","size","AssetDetail","avatarBackground","randomHexColor","assetAvatar","slice","assetText","roundBalance","networkLink","liquidityLink","assetLink","assetUrl","Number","Math","round","replace","random","toString","StyleSheet","create","padding","flexDirection","textDecorationLine","paddingTop","borderBottomWidth","borderColor","marginLeft","width","height","borderRadius","textAlign","fontSize","lineHeight","Tab","createBottomTabNavigator","MainNavigator","NavigationContainer","Navigator","screenOptions","route","tabBarIcon","iconName","focused","marginBottom","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","component","App","props","isLoadingComplete","setLoadingComplete","skipLoadingScreen","maxWidth","alignSelf","Platform","OS","StatusBar","barStyle","startAsync","loadResourcesAsync","onError","handleLoadingError","onFinish","handleFinishLoading","Promise","all","Asset","loadAsync","require","warn","module","exports"],"mappings":"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","file":"static/js/app.c878d75d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Text, View } from \"react-native\";\n\nexport default function SettingsScreen() {\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#fff\",\n      }}\n    >\n      <Text>Settings!</Text>\n    </View>\n  );\n}\n","import { Networks } from \"stellar-base\";\nimport { Keypair, Server } from \"stellar-sdk\";\nimport * as Freighter from \"@stellar/freighter-api\";\n\nexport const networks = [\n  {\n    name: \"testnet\",\n    passphrase: Networks.TESTNET,\n    serverUrl: \"https://horizon-testnet.stellar.org\",\n  },\n  {\n    name: \"public\",\n    passphrase: Networks.PUBLIC,\n    serverUrl: \"https://horizon.stellar.org\",\n  },\n];\n\nexport const initServer = (network, setServer, setAccount) => {\n  if (network) {\n    setServer(new Server(network.serverUrl));\n  } else {\n    setServer(undefined);\n  }\n  setAccount(undefined);\n};\n\nexport const freighter = {\n  isInstalled: Freighter.isConnected(),\n  installUrl: \"https://freighter.app/\",\n};\n\nexport const connectFreighter = async () => {\n  try {\n    if (!freighter.isInstalled) {\n      return { isError: true, error: new Error(\"Freighter not available\") };\n    }\n    const publicKey = await Freighter.getPublicKey();\n    const keypair = Keypair.fromPublicKey(publicKey);\n    return {\n      isError: false,\n      keypair: keypair,\n    };\n  } catch (err) {\n    return { isError: true, error: err };\n  }\n};\n\nexport const fetchAccount = async (server, keypair) => {\n  try {\n    const account = await server.loadAccount(keypair.publicKey());\n    const balances = account.balances.map((asset) => {\n      if (asset.asset_type === \"native\") {\n        return {\n          balance: asset.balance,\n          assetCode: \"XLM\",\n        };\n      } else if (\n        asset.asset_type === \"credit_alphanum4\" ||\n        asset.asset_type === \"credit_alphanum12\"\n      ) {\n        return {\n          balance: asset.balance,\n          assetCode: asset?.asset_code,\n          assetIssuer: asset?.asset_issuer,\n        };\n      } else if (asset.asset_type === \"liquidity_pool_shares\") {\n        return {\n          balance: asset.balance,\n          liquidity_pool_id: asset?.liquidity_pool_id,\n        };\n      }\n    });\n    const operations =\n      (await server\n        .transactions()\n        .forAccount(account.accountId())\n        .order(\"asc\")\n        .limit(1)\n        .call()\n        .then(({ records }) => records.pop())\n        .then((record) => record?.operations())\n        .then((operations) => operations?.records)\n        .catch(console.error)) || [];\n    const createRecord = operations.find(\n      (rec) => rec.type === \"create_account\"\n    );\n    const createdAt = createRecord ? createRecord.created_at : \"-\";\n    const createdBy = createRecord ? createRecord.source_account : \"-\";\n    return {\n      isError: false,\n      accountId: account.accountId(),\n      createdAt: createdAt,\n      createdBy: createdBy,\n      balances: balances,\n    };\n  } catch (err) {\n    return {\n      isError: true,\n      error: err,\n    };\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport * as Clipboard from \"expo-clipboard\";\nimport * as Linking from \"expo-linking\";\n\nimport {\n  connectFreighter,\n  fetchAccount,\n  freighter,\n  initServer,\n  networks,\n} from \"../services/account\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\n\nconst HomeScreen = () => {\n  const [network, setNetwork] = useState(networks[0]);\n  const [server, setServer] = useState();\n  const [keypair, setKeypair] = useState();\n  const [loading, setLoading] = useState(false);\n  const [account, setAccount] = useState();\n\n  useEffect(() => {\n    initServer(network, setServer, setAccount);\n  }, [network]);\n\n  useEffect(() => {\n    if (server && keypair) {\n      setLoading(true);\n      fetchAccount(server, keypair).then((res) => {\n        if (!res.isError) {\n          setAccount(res);\n        } else {\n          setAccount(undefined);\n        }\n        setLoading(false);\n      });\n    } else {\n      setAccount(undefined);\n    }\n  }, [server, keypair, setLoading]);\n\n  const disconnect = () => {\n    setKeypair(undefined);\n  };\n\n  const connect = () => {\n    connectFreighter().then((res) => {\n      console.log(res);\n      if (!res.isError) {\n        setKeypair(res.keypair);\n      }\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.buttons}>\n        <View style={styles.row}>\n          {networks.map((net) => (\n            <Button\n              key={net.name}\n              onPress={() => setNetwork(net)}\n              color={net.name === network.name ? \"#08f\" : \"gray\"}\n              title={net.name}\n            />\n          ))}\n        </View>\n        {!keypair ? (\n          <Button\n            onPress={connect}\n            title=\"Connect wallet\"\n            disabled={!freighter.isInstalled}\n          />\n        ) : (\n          <Button color=\"#841584\" onPress={disconnect} title=\"Disconnect\" />\n        )}\n      </View>\n\n      {!!account && !account?.isError ? (\n        <View style={styles.container}>\n          <View style={styles.accountContainer}>\n            <Text>\n              <strong>Account</strong>\n            </Text>\n            <AccountDetail accountId={account?.accountId} network={network} />\n            <Text>Created by:</Text>\n            <AccountDetail accountId={account?.createdBy} network={network} />\n            <Text>\n              Created at:\n              <br />\n              {account?.createdAt}\n            </Text>\n          </View>\n\n          <Text>\n            <strong>Balances</strong>\n          </Text>\n          <ScrollView\n            style={styles.column}\n            contentContainerStyle={styles.scrollContainer}\n          >\n            {account?.balances.map((asset, index) => (\n              <View style={styles.assetContainer} key={`asset_${index}`}>\n                <AssetDetail asset={asset} network={network} />\n              </View>\n            ))}\n          </ScrollView>\n        </View>\n      ) : (\n        <View style={styles.infoContainer}>\n          {!freighter.isInstalled ? (\n            <Text>\n              Freighter extension is not installed\n              <br />\n              Get it from{\" \"}\n              <TouchableOpacity\n                onPress={() => Linking.openURL(freighter.installUrl)}\n              >\n                <Text style={styles.link}>{freighter.installUrl}</Text>\n              </TouchableOpacity>\n            </Text>\n          ) : (\n            <Text>\n              {loading\n                ? \"Loading...\"\n                : !keypair\n                ? \"Connect your wallet to show account information.\"\n                : \"Couldn't find account information, check that you have correct network selected.\"}\n            </Text>\n          )}\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default HomeScreen;\n\nconst AccountDetail = ({ accountId, network }) => {\n  const accountUrl = `https://stellar.expert/explorer/${network.name}/account/${accountId}`;\n\n  return (\n    <View style={styles.detailContainer}>\n      <TouchableOpacity onPress={() => Linking.openURL(accountUrl)}>\n        <Text style={styles.link}>\n          <strong>{displayId(accountId)}</strong>\n        </Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => Clipboard.setString(accountId)}>\n        <FontAwesome5 name=\"copy\" size={18} />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst AssetDetail = ({ asset, network }) => {\n  const assetUrl = () => {\n    const networkLink = `https://stellar.expert/explorer/${network.name}/`;\n    const liquidityLink = `liquidity-pool/${asset?.liquidity_pool_id}`;\n    const assetLink = `asset/${asset?.assetCode}${\n      asset.assetIssuer ? `-${asset.assetIssuer}` : \"\"\n    }`;\n\n    return `${networkLink}${\n      !asset.liquidity_pool_id ? `${assetLink}` : `${liquidityLink}`\n    }`;\n  };\n\n  return (\n    <View style={styles.detailContainer}>\n      <View style={styles.row}>\n        <View\n          style={[\n            styles.avatarBackground,\n            { backgroundColor: randomHexColor() },\n          ]}\n        >\n          <Text style={styles.assetAvatar}>\n            {asset.assetCode ? asset.assetCode.slice(0, 3) : \"+\"}\n          </Text>\n        </View>\n        {!asset.liquidity_pool_id ? (\n          <View style={styles.assetText}>\n            <Text>\n              <strong>{`${roundBalance(asset.balance)} ${\n                asset.assetCode\n              }`}</strong>\n            </Text>\n            <Text>{displayId(asset?.assetIssuer)}</Text>\n          </View>\n        ) : (\n          <View style={styles.assetText}>\n            <Text>\n              <strong>{`${roundBalance(asset.balance)} pool shares`}</strong>\n            </Text>\n            <Text>\n              Liquidity pool id: {asset?.liquidity_pool_id.slice(0, 18)}...\n            </Text>\n          </View>\n        )}\n      </View>\n      <TouchableOpacity onPress={() => Linking.openURL(assetUrl())}>\n        <FontAwesome5 name=\"external-link-alt\" size={18} />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst displayId = (accountId) => {\n  return accountId\n    ? `${accountId.slice(0, 12)}...${accountId.slice(-12)}`\n    : undefined;\n};\n\nconst roundBalance = (balance) => {\n  return balance > 0 && balance < 1\n    ? Number(Math.round(balance + \"e8\") + \"e-8\")\n    : Number(Math.round(balance + \"e2\") + \"e-2\");\n};\n\nconst randomHexColor = () => {\n  return \"#000000\".replace(/0/g, () => {\n    return (~~(Math.random() * 16)).toString(16);\n  });\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 3,\n    backgroundColor: \"#fff\",\n  },\n  row: {\n    flexDirection: \"row\",\n  },\n  column: {\n    flexDirection: \"column\",\n  },\n  link: {\n    textDecorationLine: \"underline\",\n  },\n  buttons: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  scrollContainer: {\n    paddingTop: 5,\n  },\n  accountContainer: {\n    flexDirection: \"column\",\n    borderBottomWidth: \"thin\",\n    padding: 5,\n  },\n  assetContainer: {\n    borderBottomWidth: 1,\n    borderColor: \"gray\",\n    padding: 10,\n  },\n  detailContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  assetText: {\n    flexDirection: \"column\",\n    marginLeft: 10,\n  },\n  avatarBackground: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 42,\n    height: 42,\n    borderRadius: 42,\n  },\n  assetAvatar: {\n    textAlign: \"center\",\n    backgroundColor: \"none\",\n    fontSize: 14,\n    lineHeight: 14,\n  },\n  infoContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n});\n","import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport HomeScreen from \"../screens/HomeScreen\";\n\nconst Tab = createBottomTabNavigator();\n\nexport default function MainNavigator() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused }) => {\n            let iconName;\n\n            if (route.name === \"Home\") {\n              iconName = \"home\";\n            } else if (route.name === \"Settings\") {\n              iconName = \"cog\";\n            }\n\n            return (\n              <FontAwesome5\n                name={iconName}\n                size={26}\n                style={{ marginBottom: -3 }}\n                color={focused ? \"tomato\" : \"gray\"}\n              />\n            );\n          },\n          tabBarActiveTintColor: \"tomato\",\n          tabBarInactiveTintColor: \"gray\",\n        })}\n      >\n        <Tab.Screen name=\"Home\" component={HomeScreen} />\n        <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Platform, StatusBar, View } from \"react-native\";\nimport AppLoading from \"expo-app-loading\";\nimport { Asset } from \"expo-asset\";\n\nimport MainNavigator from \"./navigation/MainNavigator\";\n\nexport default function App(props) {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return (\n      <AppLoading\n        startAsync={loadResourcesAsync}\n        onError={handleLoadingError}\n        onFinish={() => handleFinishLoading(setLoadingComplete)}\n      />\n    );\n  } else {\n    return (\n      <View\n        style={{\n          flex: 1,\n          backgroundColor: \"#fff\",\n          width: \"100%\",\n          maxWidth: \"36rem\",\n          alignSelf: \"center\",\n        }}\n      >\n        {Platform.OS === \"ios\" && <StatusBar barStyle=\"default\" />}\n        <MainNavigator />\n      </View>\n    );\n  }\n}\n\nasync function loadResourcesAsync() {\n  await Promise.all([\n    Asset.loadAsync([require(\"./assets/images/freighter.png\")]),\n  ]);\n}\n\nfunction handleLoadingError(error) {\n  // In this case, you might want to report the error to your error reporting\n  // service, for example Sentry\n  console.warn(error);\n}\n\nfunction handleFinishLoading(setLoadingComplete) {\n  setLoadingComplete(true);\n}\n","module.exports = __webpack_public_path__ + \"static/media/freighter.9391c7b8.png\";"],"sourceRoot":""}